package test

public trait TwoSuperclassesVarargAndNot {

    public trait Sub : test.TwoSuperclassesVarargAndNot.Super1, test.TwoSuperclassesVarargAndNot.Super2 {
        public abstract override /*2*/ fun foo(/*0*/ p0: kotlin.Array<(out) kotlin.String!>!): kotlin.Unit
    }

    public trait Super1 {
        public abstract fun foo(/*0*/ vararg p0: kotlin.String! /*kotlin.Array<(out) kotlin.String!>!*/): kotlin.Unit
    }

    public trait Super2 {
        public abstract fun foo(/*0*/ p0: kotlin.Array<(out) kotlin.String!>!): kotlin.Unit
    }
}

package test.TwoSuperclassesVarargAndNot {
    public /*synthesized*/ fun Super1(/*0*/ function: (kotlin.Array<(out) kotlin.String!>!) -> kotlin.Unit): test.TwoSuperclassesVarargAndNot.Super1
    public /*synthesized*/ fun Super2(/*0*/ function: (kotlin.Array<(out) kotlin.String!>!) -> kotlin.Unit): test.TwoSuperclassesVarargAndNot.Super2
}
